"use strict";(self.webpackChunkpec_docs=self.webpackChunkpec_docs||[]).push([[414],{9909:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>a,frontMatter:()=>s,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"Development Guidelines/guidelines-git-workflow","title":"Git Workflow","description":"This section detailed the maintaining the apllication\'s repository. By following these guidelines, developers can ensure a smoother workflow when collaborating in a team environment, reducing merge issues and maintaining a clean history.","source":"@site/docs/03-Development Guidelines/04-git-workflow.md","sourceDirName":"03-Development Guidelines","slug":"/Development Guidelines/guidelines-git-workflow","permalink":"/pec-docs/Development Guidelines/guidelines-git-workflow","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"id":"guidelines-git-workflow","title":"Git Workflow"},"sidebar":"tutorialSidebar","previous":{"title":"Component Organization","permalink":"/pec-docs/Development Guidelines/guidelines-component-org"},"next":{"title":"Git Standards","permalink":"/pec-docs/Development Guidelines/guidelines-git-standards"}}');var t=i(4848),r=i(8453);const s={id:"guidelines-git-workflow",title:"Git Workflow"},l="Git Workflow",c={},d=[{value:"Pulling from Origin Before Commiting and Pushing",id:"pulling-from-origin-before-commiting-and-pushing",level:2},{value:"Importance of Pulling Before Committing",id:"importance-of-pulling-before-committing",level:3},{value:"Steps to Follow",id:"steps-to-follow",level:3},{value:"Cloning the Repository",id:"cloning-the-repository",level:3},{value:"Contacting Support",id:"contacting-support",level:2}];function h(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"git-workflow",children:"Git Workflow"})}),"\n",(0,t.jsx)(n.p,{children:"This section detailed the maintaining the apllication's repository. By following these guidelines, developers can ensure a smoother workflow when collaborating in a team environment, reducing merge issues and maintaining a clean history."}),"\n",(0,t.jsx)(n.h2,{id:"pulling-from-origin-before-commiting-and-pushing",children:"Pulling from Origin Before Commiting and Pushing"}),"\n",(0,t.jsx)(n.h3,{id:"importance-of-pulling-before-committing",children:"Importance of Pulling Before Committing"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Stay Updated:"})," Always pull the latest changes from the remote repository before making new commits. This ensures your local branch is synchronized",(0,t.jsx)(n.br,{}),"\n","with the upstream branch, minimizing the risk of merge conflicts later on."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Prevent Merge Conflicts:"})," By pulling first, you can integrate any changes",(0,t.jsx)(n.br,{}),"\n","by others into your local work. This helps identify conflicts early, allowing you to resolve them before pushing your changes."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"steps-to-follow",children:"Steps to Follow"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Check Current Branch:"})," Ensure you are on the correct branch where you want to make changes."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"git checkout your-branch-name\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Pull Latest Changes:"})," Run the following command to fetch and merge changes from the remote repository:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"git pull origin your-branch-name\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"If there are conflicts, resolve them before proceeding."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Commit Your Changes:"})," After pulling and making updates to your code, stage and commit your changes:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'git add .\r\ngit commit -m "Describe your changes here"\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Push Your Changes:"})," Once the local up-to-date and your work is committed, push the changes to the remote repository:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"git push origin your-branch-name\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"cloning-the-repository",children:"Cloning the Repository"}),"\n",(0,t.jsx)(n.p,{children:"To clone this repository and set it up on your local machine, follow these steps:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Copy the Repository URL:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Go to the Git hosting service (e.g., GitHub or GitLab)."}),"\n",(0,t.jsx)(n.li,{children:"Navigate to the PEC Website repository."}),"\n",(0,t.jsx)(n.li,{children:'Click the "Code" button and copy the HTTPS URL.'}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Clone the Repository:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Open Visual Studio Code."}),"\n",(0,t.jsxs)(n.li,{children:["Open the Command Palette (",(0,t.jsx)(n.code,{children:"Ctrl+Shift+P"})," or ",(0,t.jsx)(n.code,{children:"Cmd+Shift+P"}),")."]}),"\n",(0,t.jsxs)(n.li,{children:["Select ",(0,t.jsx)(n.code,{children:"Git:Clone"})," and paste the repository URL."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Choose a Location:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Select a local folder where the repository will be cloned."}),"\n",(0,t.jsx)(n.li,{children:'Click "Open" when prompted to view the cloned repository.'}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Set Up Dependencies:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Follow the project-specific setup instructions (e.g. installing Node.js dependencies of configuring envronment variables)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"contacting-support",children:"Contacting Support"}),"\n",(0,t.jsxs)(n.p,{children:["If you encounter any issues or have questions not covered in this documentation, our dedicated support team is here to assist you. Contact us at ",(0,t.jsx)(n.a,{href:"mailto:techdept@premiumeventconsulting.co.za",children:"techdept@premiumeventconsulting.co.za"}),"."]})]})}function a(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>l});var o=i(6540);const t={},r=o.createContext(t);function s(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);