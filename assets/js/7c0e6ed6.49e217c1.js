"use strict";(self.webpackChunkpec_docs=self.webpackChunkpec_docs||[]).push([[813],{3413:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Platform Overview","href":"/pec-docs/","docId":"intro","unlisted":false},{"type":"category","label":"Platform Concepts","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Getting Started","href":"/pec-docs/Platform Concepts/concepts-getting-started","docId":"Platform Concepts/concepts-getting-started","unlisted":false},{"type":"link","label":"Folder Structure","href":"/pec-docs/Platform Concepts/concepts-folder-structure","docId":"Platform Concepts/concepts-folder-structure","unlisted":false},{"type":"link","label":"Email Setup","href":"/pec-docs/Platform Concepts/concepts-email-setup","docId":"Platform Concepts/concepts-email-setup","unlisted":false},{"type":"link","label":"Deployment","href":"/pec-docs/Platform Concepts/concepts-deployment","docId":"Platform Concepts/concepts-deployment","unlisted":false}]},{"type":"category","label":"Development Guidelines","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Coding Standards","href":"/pec-docs/Development Guidelines/guidelines-coding-standards","docId":"Development Guidelines/guidelines-coding-standards","unlisted":false},{"type":"link","label":"Style Guide","href":"/pec-docs/Development Guidelines/guidelines-style-guide","docId":"Development Guidelines/guidelines-style-guide","unlisted":false},{"type":"link","label":"Component Organization","href":"/pec-docs/Development Guidelines/guidelines-component-org","docId":"Development Guidelines/guidelines-component-org","unlisted":false},{"type":"link","label":"Git Workflow","href":"/pec-docs/Development Guidelines/guidelines-git-workflow","docId":"Development Guidelines/guidelines-git-workflow","unlisted":false},{"type":"link","label":"Git Standards","href":"/pec-docs/Development Guidelines/guidelines-git-standards","docId":"Development Guidelines/guidelines-git-standards","unlisted":false}]}]},"docs":{"Development Guidelines/guidelines-coding-standards":{"id":"Development Guidelines/guidelines-coding-standards","title":"Coding Standards","description":"This section outlines the coding standards for the PEC application. Adhereing to these standards ensures consistency, readability, maintainability, and enables collaboration among developers.","sidebar":"tutorialSidebar"},"Development Guidelines/guidelines-component-org":{"id":"Development Guidelines/guidelines-component-org","title":"Component Organization","description":"This section outlines the best practices for structuring components to ensure reusability and maintaining a scalable codebase for the PEC application.","sidebar":"tutorialSidebar"},"Development Guidelines/guidelines-git-standards":{"id":"Development Guidelines/guidelines-git-standards","title":"Git Standards","description":"This section establishes clear Git standards for maintaining a consistent and organised workflow. The following guidelines cover branch naming conventions, commit message formats, and best practices for pull requests.","sidebar":"tutorialSidebar"},"Development Guidelines/guidelines-git-workflow":{"id":"Development Guidelines/guidelines-git-workflow","title":"Git Workflow","description":"This section detailed the maintaining the apllication\'s repository. By following these guidelines, developers can ensure a smoother workflow when collaborating in a team environment, reducing merge issues and maintaining a clean history.","sidebar":"tutorialSidebar"},"Development Guidelines/guidelines-style-guide":{"id":"Development Guidelines/guidelines-style-guide","title":"Style Guide","description":"This section explains how to configure pre-commit hooks using Husky, ESLint, Prettier, and lint-staged in the PEC application. These hooks help ensure code qulity by running checks before commits are made.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Platform Overview","description":"Project Purpose","sidebar":"tutorialSidebar"},"Platform Concepts/concepts-deployment":{"id":"Platform Concepts/concepts-deployment","title":"Deployment","description":"This section will guide developers on and deploying the application to production.","sidebar":"tutorialSidebar"},"Platform Concepts/concepts-email-setup":{"id":"Platform Concepts/concepts-email-setup","title":"Email Setup","description":"This section includes detailed instructions that help developers configure, test, and debug the email functionality in this project.","sidebar":"tutorialSidebar"},"Platform Concepts/concepts-folder-structure":{"id":"Platform Concepts/concepts-folder-structure","title":"Folder Structure","description":"This section provides a high-level overview of the web application\'s architecture. Understanding the organization of the app\'s files and directories is essential for developers, administrators, and anyone who wants to navigate and maintain the system.","sidebar":"tutorialSidebar"},"Platform Concepts/concepts-getting-started":{"id":"Platform Concepts/concepts-getting-started","title":"Getting Started","description":"This section will guide developers on setting up the local environment, running the app for development.","sidebar":"tutorialSidebar"}}}}')}}]);