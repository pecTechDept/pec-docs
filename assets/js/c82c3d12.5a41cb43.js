"use strict";(self.webpackChunkpec_docs=self.webpackChunkpec_docs||[]).push([[699],{3064:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"Development Guidelines/guidelines-style-guide","title":"Style Guide","description":"This section explains how to configure pre-commit hooks using Husky, ESLint, Prettier, and lint-staged in the PEC application. These hooks help ensure code qulity by running checks before commits are made.","source":"@site/docs/03-Development Guidelines/02-style-guide.md","sourceDirName":"03-Development Guidelines","slug":"/Development Guidelines/guidelines-style-guide","permalink":"/pec-docs/Development Guidelines/guidelines-style-guide","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"guidelines-style-guide","title":"Style Guide"},"sidebar":"tutorialSidebar","previous":{"title":"Coding Standards","permalink":"/pec-docs/Development Guidelines/guidelines-coding-standards"},"next":{"title":"Component Organization","permalink":"/pec-docs/Development Guidelines/guidelines-component-org"}}');var r=t(4848),s=t(8453);const o={id:"guidelines-style-guide",title:"Style Guide"},l="Style Guide",d={},c=[{value:"Prerequisites",id:"prerequisites",level:4},{value:"Step 1: Install Dependencies",id:"step-1-install-dependencies",level:3},{value:"Add Eslint Config.",id:"add-eslint-config",level:4},{value:"Add Prettier Config.",id:"add-prettier-config",level:4},{value:"Step 2: Initialize Husky",id:"step-2-initialize-husky",level:3},{value:"Step 3: Create the Pre-Commit Hook",id:"step-3-create-the-pre-commit-hook",level:3},{value:"Step 4: Configure Lint-Staged",id:"step-4-configure-lint-staged",level:3},{value:"Step 5: Add NPM Scripts",id:"step-5-add-npm-scripts",level:3},{value:"Steps 6: Testing Your Setup",id:"steps-6-testing-your-setup",level:3},{value:"Contacting Support",id:"contacting-support",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"style-guide",children:"Style Guide"})}),"\n",(0,r.jsx)(n.p,{children:"This section explains how to configure pre-commit hooks using Husky, ESLint, Prettier, and lint-staged in the PEC application. These hooks help ensure code qulity by running checks before commits are made."}),"\n",(0,r.jsx)(n.h4,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsx)(n.p,{children:"Before setting up the hooks, ensure you have the following installed:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Node.js"}),"\n",(0,r.jsx)(n.li,{children:"Git"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"step-1-install-dependencies",children:"Step 1: Install Dependencies"}),"\n",(0,r.jsx)(n.p,{children:"Navigate to your project directory and install the required development dependencies:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"npm install --save-dev eslint prettier eslint-plugin-prettier eslint-config-prettier prettier-plugin-tailwindcss @next/eslint-plugin-next lint-staged husky eslint-config-airbnb\n"})}),"\n",(0,r.jsx)(n.h4,{id:"add-eslint-config",children:"Add Eslint Config."}),"\n",(0,r.jsxs)(n.p,{children:["The project already contains a filed named ",(0,r.jsx)(n.code,{children:".eslintrc.json"}),", replace its content with:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'{\r\n  "env": {\r\n    "node": true,\r\n    "es2021": true,\r\n    "browser": true\r\n  },\r\n  "globals": {\r\n    "React": true\r\n  },\r\n  "extends": [\r\n    "airbnb",\r\n    "prettier",\r\n    "next/typescript",\r\n    "eslint:recommended",\r\n    "next/core-web-vitals"\r\n  ],\r\n  "parserOptions": {\r\n    "ecmaVersion": 12,\r\n    "sourceType": "module",\r\n    "ecmaFeatures": { "jsx": true }\r\n  },\r\n  "plugins": ["prettier"],\r\n  "rules": {\r\n    "no-shadow": "off",\r\n    "arrow-body-style": "off",\r\n    "import/extensions": "off",\r\n    "curly": ["error", "multi"],\r\n    "react/button-has-type": "off",\r\n    "react/react-in-jsx-scope": "off",\r\n    "react/jsx-filename-extension": "off",\r\n    "import/prefer-default-export": "warn",\r\n    "semi": 0, // let it handle by prettier\r\n    "react/function-component-definition": "off",\r\n    "indent": "off", // let it handle by prettier\r\n    "max-len": "off", // let it handle by prettier\r\n    "comma-dangle": "off", // let it handle by prettier\r\n    "no-redeclare": "off", // let it handle by TypeScript\r\n    "react/jsx-indent": "off", // let it handle by prettier\r\n    "no-unused-vars": "off", // let it handle by TypeScript\r\n    "prettier/prettier": ["error", { "endOfLine": "auto" }],\r\n    "operator-linebreak": "off", // let it handle by prettier\r\n    "object-curly-newline": "off", // let it handle by prettier\r\n    "function-paren-newline": "off", // let it handle by prettier\r\n    "implicit-arrow-linebreak": "off", // let it handle by prettier\r\n    "react/require-default-props": "off", // let it handle by TypeScript\r\n    "nonblock-statement-body-position": "off", // let it handle by prettier\r\n    "react/jsx-one-expression-per-line": "off" // let it handle by prettier\r\n  }\r\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"add-prettier-config",children:"Add Prettier Config."}),"\n",(0,r.jsxs)(n.p,{children:["Create a Prettier config file with the name ",(0,r.jsx)(n.code,{children:".prettierrc"})," at the root level of of the project."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'{\r\n  "tabWidth": 2,\r\n  "semi": false,\r\n  "useTabs": false,\r\n  "singleQuote": true,\r\n  "trailingComma": "es5",\r\n  "plugins": ["prettier-plugin-tailwindcss"]\r\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"step-2-initialize-husky",children:"Step 2: Initialize Husky"}),"\n",(0,r.jsx)(n.p,{children:"Run the following command to initialize Husky in the project:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"npx husky install\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This command creates a ",(0,r.jsx)(n.code,{children:".husky"})," directory in the project root, which will hold the Git hooks."]}),"\n",(0,r.jsx)(n.h3,{id:"step-3-create-the-pre-commit-hook",children:"Step 3: Create the Pre-Commit Hook"}),"\n",(0,r.jsx)(n.p,{children:"Create a pre-commit hook by running:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'npx husky add .husky/pre-commit "npm run lint-staged"\n'})}),"\n",(0,r.jsxs)(n.p,{children:["This commant sets up a pre-commit hook that runs ",(0,r.jsx)(n.code,{children:"lint-staged"}),", which will check for stged files before allowing a commit."]}),"\n",(0,r.jsx)(n.h3,{id:"step-4-configure-lint-staged",children:"Step 4: Configure Lint-Staged"}),"\n",(0,r.jsxs)(n.p,{children:["Create a ",(0,r.jsx)(n.code,{children:"lintstagedrc.js"})," file in project root with following content:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"const path = require('path');\r\n\r\nconst buildEslintCommand = (filenames) =>\r\n  `next lint --fix --file ${filenames.map((f) => path.relative(process.cwd(), f)).join(' --file ')}`;\r\n\r\nmodule.exports = {\r\n  '*/.(ts|tsx)': () => 'yarn tsc --noEmit',\r\n  '*.{js,jsx,ts,tsx,json,md,prettierrc,css,scss}': 'prettier --write --config .prettierrc',\r\n  '*.{js,jsx,ts,tsx}': [buildEslintCommand],\r\n};\n"})}),"\n",(0,r.jsx)(n.h3,{id:"step-5-add-npm-scripts",children:"Step 5: Add NPM Scripts"}),"\n",(0,r.jsxs)(n.p,{children:["Ensure you have the follwoing scripts in your ",(0,r.jsx)(n.code,{children:"package.json"})," file:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'{\r\n  "scripts": {\r\n    "check-format": "prettier --check .",\r\n    "check-lint": "eslint .",\r\n    "check-types": "tsc --noEmit",\r\n    "build": "next build"\r\n  }\r\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"steps-6-testing-your-setup",children:"Steps 6: Testing Your Setup"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Make some changes in your code."}),"\n",(0,r.jsxs)(n.li,{children:["Stage your changes using ",(0,r.jsx)(n.code,{children:"git add ."}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Attempt to commit using ",(0,r.jsx)(n.code,{children:'git commit -m "Your commit message"'}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"contacting-support",children:"Contacting Support"}),"\n",(0,r.jsxs)(n.p,{children:["If you encounter any issues or have questions not covered in this documentation, our dedicated support team is here to assist you. Contact us at ",(0,r.jsx)(n.a,{href:"mailto:techdept@premiumeventconsulting.co.za",children:"techdept@premiumeventconsulting.co.za"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var i=t(6540);const r={},s=i.createContext(r);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);